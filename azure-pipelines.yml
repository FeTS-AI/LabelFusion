# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

strategy:
  matrix:
    linux_3.8:
      imageName: 'ubuntu-latest'
      python.version: '3.8'
    mac_3.8:
      imageName: 'macos-latest'
      python.version: '3.8'
    windows_3.8:
      imageName: 'windows-latest'
      python.version: '3.8'

pool:
  vmImage: $(imageName)
  
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install .
    pip install artifacts-keyring
  displayName: 'Install dependencies'

- script: |
    python fusion_run -inputs ./data/unet.nii.gz,./data/resunet.nii.gz -output ./data/test_staple.nii.gz -classes 0,1,2,4 -method staple 
    python -c "from LabelFusion.itkUtils import *; sys.exit('fail') if(not (imageComparision('./data/baseline_staple.nii.gz', './data/test_staple.nii.gz'))) else print('pass')"
  displayName: 'Run through staple'
  
- script: |
    python fusion_run -inputs ./data/unet.nii.gz,./data/resunet.nii.gz -output ./data/test_itkvoting.nii.gz -classes 0,1,2,4 -method itkvoting 
    python -c "from LabelFusion.itkUtils import *; sys.exit('fail') if(not (imageComparision('./data/baseline_itkvoting.nii.gz', './data/test_itkvoting.nii.gz'))) else print('pass')"
  displayName: 'Run through itkvoting'
  
- script: |
    python fusion_run -inputs ./data/unet.nii.gz,./data/resunet.nii.gz -output ./data/test_majorityvoting.nii.gz -classes 0,1,2,4 -method majorityvoting 
    python -c "from LabelFusion.itkUtils import *; sys.exit('fail') if(not (imageComparision('./data/baseline_majorityvoting.nii.gz', './data/test_majorityvoting.nii.gz'))) else print('pass')"
  displayName: 'Run through majorityvoting'
  
- script: |
    python fusion_run -inputs ./data/unet.nii.gz,./data/resunet.nii.gz -output ./data/test_simple.nii.gz -classes 0,1,2,4 -method simple 
    python -c "from LabelFusion.itkUtils import *; sys.exit('fail') if(not (imageComparision('./data/baseline_simple.nii.gz', './data/test_simple.nii.gz'))) else print('pass')"
  displayName: 'Run through simple'

- script: |
    python setup.py sdist bdist_wheel
  displayName: 'Artifact creation'

- task: TwineAuthenticate@1
  displayName: 'Twine Authenticate'
  inputs:
    pythonUploadServiceConnection: PyPiâ€¯ 

- script: |
    python -m twine upload --skip-existing -r "labelfusion" --config-file $(PYPIRC_PATH) dist/*.whl
    python -m twine upload --skip-existing -r "labelfusion" --config-file $(PYPIRC_PATH) dist/*.tar.gz
  displayName: 'Uploading build'
